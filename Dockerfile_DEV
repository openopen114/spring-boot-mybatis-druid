# ========== DEV ==========
# Use the official maven/Java 8 image to create a build artifact.
# https://hub.docker.com/_/maven
FROM maven:3.8-jdk-11 as builder

# Copy local code to the container image.
WORKDIR /app
COPY pom.xml .
COPY src ./src

# Build a release artifact.
# ========== DEV ==========
RUN mvn clean package -Pdev  -DskipTests

# Use AdoptOpenJDK for base image.
# It's important to use OpenJDK 8u191 or above that has container support enabled.
# https://hub.docker.com/r/adoptopenjdk/openjdk8
# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
FROM adoptopenjdk/openjdk11:alpine-jre

# Copy the jar to the production image from the builder stage.
# ========== spring-boot-cron-job ==========
COPY --from=builder /app/target/spring-boot-cron-job.war /spring-boot-cron-job.war

# Run the web service on container startup.
# ========== spring-boot-cron-job ==========
CMD ["java",  "-jar", "/spring-boot-cron-job.war"]